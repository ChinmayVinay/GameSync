import { NextRequest, NextResponse } from "next/server";
import { getGameById } from "@/data/games";
import { ReleaseNotesFetcher } from "@/lib/releaseNotesFetchers";
import { ReleaseNotesSummarizer } from "@/lib/summarizer";

export async function POST(request: NextRequest) {
  try {
    const { gameId, lastPlayedDate } = await request.json();

    if (!gameId || !lastPlayedDate) {
      return NextResponse.json(
        { error: "Game ID and last played date are required" },
        { status: 400 }
      );
    }

    const game = getGameById(gameId);
    if (!game) {
      return NextResponse.json(
        { error: "Game not found" },
        { status: 404 }
      );
    }

    // Parse the last played date
    const sinceDate = new Date(lastPlayedDate);
    if (isNaN(sinceDate.getTime())) {
      return NextResponse.json(
        { error: "Invalid date format" },
        { status: 400 }
      );
    }

    try {
      // Fetch real release notes
      console.log(`Fetching release notes for ${game.name} since ${sinceDate.toISOString()}`);
      const releaseNotes = await ReleaseNotesFetcher.fetchReleaseNotes(gameId, sinceDate);

      // Summarize the release notes
      console.log(`Found ${releaseNotes.length} release notes, generating summary...`);
      const summary = await ReleaseNotesSummarizer.summarizeReleaseNotes(
        releaseNotes,
        game.name,
        lastPlayedDate
      );

      return NextResponse.json({
        summary,
        game: game.name,
        lastPlayedDate,
        notesCount: releaseNotes.length,
      });
    } catch (fetchError) {
      console.error("Error fetching or summarizing release notes:", fetchError);

      // Fall back to mock summary if real fetching fails
      const mockSummary = generateMockSummary(game.name, lastPlayedDate);

      return NextResponse.json({
        summary: `‚ö†Ô∏è **Unable to fetch live release notes. Showing mock data instead.**\n\n${mockSummary}`,
        game: game.name,
        lastPlayedDate,
        error: "Failed to fetch real data, showing mock content",
      });
    }
  } catch (error) {
    console.error("Error in summarize API:", error);
    return NextResponse.json(
      { error: "Internal server error" },
      { status: 500 }
    );
  }
}

function generateMockSummary(gameName: string, lastPlayedDate: string): string {
  const date = new Date(lastPlayedDate);
  const now = new Date();
  const daysDiff = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));

  switch (gameName) {
    case "Counter-Strike 2":
      return `Since you last played ${gameName} on ${date.toDateString()} (${daysDiff} days ago), here are the key updates:

üîß GAMEPLAY UPDATES:
‚Ä¢ New weapon balancing changes to AK-47 and M4A4
‚Ä¢ Updated smoke grenade mechanics with improved visual effects
‚Ä¢ Revised economy system with adjusted buy round pricing

üó∫Ô∏è MAP CHANGES:
‚Ä¢ Mirage: Updated A site layout for better competitive balance
‚Ä¢ Dust2: Fixed various pixel walk exploits and visual bugs
‚Ä¢ New map rotation in competitive matchmaking

üéÆ FEATURES:
‚Ä¢ Improved anti-cheat system (VAC Live)
‚Ä¢ Enhanced server tick rate for better hit registration
‚Ä¢ New spectator mode features for tournaments

üêõ BUG FIXES:
‚Ä¢ Fixed weapon switching delays
‚Ä¢ Resolved audio occlusion issues
‚Ä¢ Improved network stability

This is a mock summary. Full implementation would fetch real patch notes from Steam.`;

    case "League of Legends":
      return `Since you last played ${gameName} on ${date.toDateString()} (${daysDiff} days ago), here are the key updates:

‚öîÔ∏è CHAMPION UPDATES:
‚Ä¢ Azir: Significant rework to abilities and passive
‚Ä¢ Jinx: Base stats adjustments and W ability changes
‚Ä¢ New champion release: Briar, The Restrained Hunger

üéÆ GAMEPLAY CHANGES:
‚Ä¢ Jungle experience and gold adjustments
‚Ä¢ New items: Statikk Shiv rework, Heartsteel buffs
‚Ä¢ Updated Rift Herald mechanics

üó∫Ô∏è MAP UPDATES:
‚Ä¢ Baron pit layout changes for better team fight dynamics
‚Ä¢ New ward spots added around Dragon pit
‚Ä¢ Updated jungle camp timings

üèÜ RANKED SYSTEM:
‚Ä¢ New split system with updated rewards
‚Ä¢ LP gains/losses rebalancing
‚Ä¢ Improved smurf detection

This is a mock summary. Full implementation would fetch real patch notes from Riot Games.`;

    case "Overwatch 2":
      return `Since you last played ${gameName} on ${date.toDateString()} (${daysDiff} days ago), here are the key updates:

ü¶∏ HERO UPDATES:
‚Ä¢ Mercy: Healing output increased, damage boost adjusted
‚Ä¢ Widowmaker: Scoped sensitivity options added
‚Ä¢ New Support Hero: Lifeweaver with unique abilities

üéÆ GAMEPLAY CHANGES:
‚Ä¢ Push map mode balancing updates
‚Ä¢ Competitive skill rating adjustments
‚Ä¢ New game mode: Flashpoint (limited time)

üó∫Ô∏è NEW CONTENT:
‚Ä¢ New Escort map: Suravasa
‚Ä¢ Updated King's Row with visual improvements
‚Ä¢ Seasonal event: Lunar New Year celebration

‚öñÔ∏è BALANCE CHANGES:
‚Ä¢ Tank role passive ability updates
‚Ä¢ DPS heroes damage falloff adjustments
‚Ä¢ Support heroes survivability improvements

üõ†Ô∏è QUALITY OF LIFE:
‚Ä¢ Improved ping system with more callouts
‚Ä¢ Enhanced replay system features
‚Ä¢ Better communication wheel options

This is a mock summary. Full implementation would fetch real patch notes from Blizzard.`;

    default:
      return `Mock summary for ${gameName} since ${date.toDateString()} (${daysDiff} days ago). This would contain real patch notes and updates in the full implementation.`;
  }
}